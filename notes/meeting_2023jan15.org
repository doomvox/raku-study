* meeting notes January 15, 2023
** the raku study group
**** usual links
***** these notes
****** https://github.com/doomvox/raku-study/blob/main/notes/meeting_2023jan15.md
****** source file (for corrections, etc)
******* https://github.com/doomvox/raku-study/blob/main/notes/meeting_2023jan15.org
***** code examples
****** https://github.com/doomvox/raku-study/tree/main/bin/2023jan15
***** last meeting notes
****** https://github.com/doomvox/raku-study/blob/main/notes/meeting_2022jan01.md

** topics
*** dpchrist: bug with perl on debian
**** https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1028275
***** https://github.com/doomvox/raku-study/tree/main/bin/2023jan15/dpchrist-perls_system_has_problems_on_dash_machines_like_debian.t
***** /home/doom/End/Cave/RakuStudy/Wall/raku-study/bin/2023jan15/dpchrist-perls_system_has_problems_on_dash_machines_like_debian.t
**** debian based systems have sh aliased to dash
***** https://wiki.archlinux.org/title/Dash
***** https://en.wikipedia.org/wiki/Almquist_shell

*** rob: $/ in nqp 

*** rob: weekly challenge

*** weekly challenge
***** https://theweeklychallenge.org/blog/perl-weekly-challenge-199/
***** https://theweeklychallenge.org/blog/perl-weekly-challenge-198/
 
*** vadim zoom class: Jan 7, 2023 (I presume it's in 2023): 
https://www.nntp.perl.org/group/perl.perl6.users/2022/12/msg10896.html

*** deepmap bug
**** https://github.com/rakudo/rakudo/issues/4435
**** simple question: where is deepmap defined?

find . -type f -name "*.pm6" | xargs egrep deepmap
./src/core.c/Slip.pm6:    multi method deepmap(Slip:D: &) {
./src/core.c/metaops.pm6:    nqp::can(&op,"nodal") ?? *.nodemap(&op) !! *.deepmap(&op)
./src/core.c/metaops.pm6:    nqp::can(&op,"nodal") ?? obj.nodemap(&op) !! obj.deepmap(&op)
./src/core.c/metaops.pm6:      !! obj.deepmap(-> \o { op(o, @args) })
./src/core.c/metaops.pm6:      !! obj.deepmap( -> \o { op(o,|args) })
./src/core.c/metaops.pm6:    nqp::can(&op,"nodal") ?? *.nodemap(&op) !! *.deepmap(&op)
./src/core.c/metaops.pm6:    list.deepmap(-> &code { code(|args) })
./src/core.c/Hyper.pm6:          !! object.deepmap($!operator)
./src/core.c/Any-iterable-methods.pm6:    proto method deepmap(|) is nodal {*}
./src/core.c/Any-iterable-methods.pm6:    multi method deepmap(Associative:D: &op) {
./src/core.c/Any-iterable-methods.pm6:        self.new.STORE: self.keys, self.values.deepmap(&op), :INITIALIZE
./src/core.c/Any-iterable-methods.pm6:    multi method deepmap(&op) {
./src/core.c/Any-iterable-methods.pm6:        sub deep(\value) is raw { my $ = value.deepmap(&op) }
./src/core.c/Any-iterable-methods.pm6:proto sub deepmap($, $, *%) {*}
./src/core.c/Any-iterable-methods.pm6:multi sub deepmap(&op, \obj) { obj.deepmap(&op) }
./src/core.c/Baggy.pm6:    multi method deepmap(Baggy:D: &mapper) {
./src/core.c/Mixy.pm6:    multi method deepmap(Mixy:D: &mapper) {
./src/core.c/Setty.pm6:    multi method deepmap(Setty:D: &mapper) {

**** start here, I think:
***** ./src/core.c/Any-iterable-methods.pm6
***** /home/doom/End/Cave/Raku/Wall/rakudo/src/core.c/Any-iterable-methods.pm6

**** Marton: CoreHackers::Sourcery for looking up definitions in core code.

**** playing with the new ast
***** RAKUDO_RAKUAST=1  raku --target=ast -e 'Bool(False)'


** announcements 
*** next meeting: January 29th

*** look for vadim's class on Saturday the 28th 

