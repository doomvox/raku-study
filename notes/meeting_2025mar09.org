* meeting notes March 09, 2025 
** the raku study group
**** usual links
***** these notes
****** https://github.com/doomvox/raku-study/blob/main/notes/meeting_2025mar09.org 

***** code examples
****** https://github.com/doomvox/raku-study/tree/main/bin/2025mar09
****** https://github.com/doomvox/raku-study/tree/main/bin/DeepMap

***** last meeting notes
****** https://github.com/doomvox/raku-study/blob/main/notes/meeting_2025feb23.org

**** group discussion group
***** https://github.com/doomvox/raku-study/discussions 

** topics for Mar 9
*** jeff issues with encodings
**** roles?
**** utf8-c8
***** /home/doom/End/Cave/Raku/Wall/roast/S32-encoding/registry.t
***** https://github.com/rakudo/rakudo/issues/5807

*** rob: raku base 36, bank echecks 
*** rob: rakudo bug turned up in weekly challenge
**** .= operator not working as "explicit assignment"
*** weekly challenge
*** jeff: cro experience
*** bike accident 

** old topics from feb 23 meeting 
*** marton's been talking over here;
**** https://github.com/doomvox/raku-study/discussions 
**** https://www.ozonehouse.com/mark/periodic/

*** rob stuff
**** conventional symbol for an alternate to assignment "="
***** can't override "="
***** Marton suggests looking into why
****** assignment backed by "STORE magic method"
******* story involves proxies
******** https://docs.raku.org/routine/STORE 
******** https://docs.raku.org/type/Proxy
**** suggestion brackets that force list of numerics to a typical type
***** bruce suggests a macro implementation
**** beginner gotcha: you can create a Numeric then if you check later it might be a Rat or whatever.
***** you create something as __ but what it is is something else
**** prove6 
***** https://raku.land/cpan:LEONT/App::Prove6
****** -e	--exec	Interpreter to run the tests ('' for compiled tests.)

*** jeff
**** interested in plain text accounting
****** https://plaintextaccounting.org/

****** after/before patterns
#+BEGIN_SRC raku
my Str $lines = $text.match(/ <.after FOO> .*<.before BAR>/);
#+END_SRC 

****** alternately the flip-flop operators, ff, fff

*** listmat closed out my deepmap bug
**** Rakudo Weekly: "fixed hyper operators and .deepmap producing unexpected types / errors"
**** https://github.com/rakudo/rakudo/issues/4435
**** source code
***** ./src/core.c/Any-iterable-methods.pm6
***** /home/doom/End/Cave/Raku/Wall/rakudo/src/core.c/Any-iterable-methods.pm6
**** the commits 
lizmat
added 2 commits that reference this issue on Feb 18, 2025

Additional fix on Associative.deepmap
ab09c6d
lizmat

Handle Associative.deepmap better wrt Empty
6e98232


commit 6e9823233991c5fd8fb9a9b24574167b1b6473f6
Author: Elizabeth Mattijsen <liz@raku.rocks>
Date:   Tue Feb 18 12:31:10 2025 +0100

    Handle Associative.deepmap better wrt Empty
    
    Issue #4435 describes how .deepmap messes up on Associatives the
    moment that some elements are skipped by returning Empty.
    
    This commit fixes that by special casing the direct Associative.deepmap
    to actually check for empty returns, and then not producing those
    keys.  At the expense of performance.
    
    This does *not* affect the >>op<< hyper case, as these still directly
    call the specialized Map/Hash.STORE methods that take 2 Iterables: one
    for keys and one for values.  Although technically these will still
    suffer from this issue, I chose not to fix those.  The reason for not
    changing these cases is really performance, combined with the fact that
    using ops (instead of generic blocks) means that the "missing value"
    case can never occur.
    
    Of course, if one would start using >>op<< hyper case on custom ops
    that *could* produce Empty to indicate missing value, then they will
    fail in unexpected ways.  However, at this point in time I'd say that's
    a case of DIHWIDT.
** follow-up 
** announcements 
*** next meetings
**** Mar  9, 2025  (bruce is traveling)
**** Mar 23, 2025
**** Apr  6, 2025
***** after this, the two-week pattern crashes into Easter: stay tuned

*** Perl & Raku Conference (Greenville, SC) 2025-06-27 through 29 Fri-Sun
**** https://tprc.us/
**** call for papers is still open: until March 15.
**** you can *request* talks on a topic
***** https://tprc.us/tprc-2025-gsp/
Bruce Gray:
This page has ideas if you want to give a talk,
and also is a place to express interest in a talk topic!
https://github.com/perlconference/tprc-2025-gsp/wiki/Topics-we-want

