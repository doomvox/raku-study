* topics
**  raku study group topics
*** collected from previous meeting notes
*** delete these once they're covered

** techid: create a database of topic ideas
*** features
**** categorization
**** links to meeting notes
** subjects
*** nested map idioms
**** TODO nested map: review perl5 approaches 
***** maybe, try python version
**** TODO nested map: get some raku code working 
***** /home/doom/End/Cave/Perl6/Wall/raku-study/bin/2021mar21/nested_map.raku
*** quoted string regexes
**** TODO re_quoted_str: perl5 versions 
**** TODO re_quoted_str: continue with raku versions
***** next: balanced quotes of various types
****** yary hluchan
******** https://github.com/doomvox/raku-study/blob/main/notes/bin/richard_hainsworth_grammar.raku
******** /home/doom/End/Cave/Perl6/Wall/raku-study/bin/richard_hainsworth_grammar.raku

****** moritz lenz 
******** https://github.com/doomvox/raku-study/blob/main/notes/bin/2021mar21/parsing_quoted_strings_backslash.raku
******** /home/doom/End/Cave/Perl6/Wall/raku-study/bin/2021mar21/parsing_quoted_strings_backslash.raku

*** a stupid mistake that isn't: naming a method with a leading ^
**** https://stackoverflow.com/questions/54143036/class-method-name-with-doesnt-get-invoked-properly/54147131#54147131
***** should this generate a warning/error?

*** Steven Lembark
**** https://www.slideshare.net/lembark/hypers-and-gathers-and-takes-oh-my
***** slide21:  "unit sub MAIN { ..."  unit?
**** https://www.slideshare.net/lembark/generating-querying-calendar-tables-in-posgresql
*** adverbs that control returns, e.g. :p for pairs (a feature Bruce Gray likes)
**** https://docs.raku.org/language/subscripts#index-entry-:p_(subscript_adverb)
*** andrew shitov "Perl 6 at a Glance"
**** https://andrewshitov.com/perl6-at-a-glance/
**** https://andrewshitov.com/wp-content/uploads/2020/01/Perl-6-at-a-Glance.pdf

*** andrew shitov's raku course on-line:
https://course.raku.org/

*** promises and threads
**** https://www.reddit.com/r/rakulang/comments/lthpxe/are_promises_multithreaded/
**** Jonathan Worthington
***** https://github.com/Raku/CCR/blob/main/Remaster/Jonathan%20Worthington/Racing-to-writeness-to-wrongness-leads.md
***** https://github.com/Raku/CCR/blob/main/Remaster/Jonathan%20Worthington/A-unified-and-improved-Supply-concurrency-model.md


*** other files to go through

  -rw-r--r--  1 doom doom  1888 Feb 14 17:07 meeting_2020dec20.org
  -rw-r--r--  1 doom doom  3606 Feb 13 22:15 meeting_2021feb07.org
  -rw-r--r--  1 doom doom  3803 Feb  7 14:02 meeting_2021jan31.org
  -rw-r--r--  1 doom doom  2519 Jan 24 20:45 meeting_2021jan24.org
  -rw-r--r--  1 doom doom  1940 Jan 18 13:17 meeting_2020jan17.org
  -rw-r--r--  1 doom doom  1505 Jan 12 11:52 meeting_2020jan10.org
  -rw-r--r--  1 doom doom  2158 Dec 19 17:17 meeting_2020dec13.org
  -rw-r--r--  1 doom doom  2146 Dec  7 13:23 meeting_2020dec06.org

*** immutability 
**** https://stackoverflow.com/questions/63294853/how-to-enforce-immutability-with-the-raku-typesystem?rq=1

*** more on data-handling in raku

**** https://stackoverflow.com/questions/66926663/is-there-a-convenient-way-to-replicate-rs-concept-of-named-vectors-in-raku-p/67513527?noredirect=1#comment122449810_67513527
***** William Michaels objects to the word "Row" for a data-record in my solution
**** arrays-of-objects
***** https://www.reddit.com/r/rakulang/comments/pocomd/a_post_which_came_out_from_a_provocation/hczfj2r/
**** Data::Reshapers
***** https://raku.land/cpan:ANTONOV/Data::Reshapers
**** "format data into a table"
https://unix.stackexchange.com/questions/649799/format-data-into-a-table/655944#655944

**** secure json-ification, vadim belman
***** https://colabti.org/irclogger/irclogger_log/raku?date=2021-09-14#l100
***** https://vrurg.github.io/2021/09/14/Secure-JSONification
***** https://www.reddit.com/r/rakulang/comments/pocomd/a_post_which_came_out_from_a_provocation/

**** pairs of separators from a string
***** https://www.nntp.perl.org/group/perl.perl6.users/2021/09/msg10138.html
***** a discussion yary was involved in, which indicates there's something interesting

**** lispyness of raku
***** https://www.codesections.com/blog/raku-lisp-impression/
***** https://www.reddit.com/r/rakulang/comments/ptm7qx/rakus_surprisingly_good_lisp_impression/

**** old raku weekly
***** https://rakudoweekly.blog/2021/09/20/2021-38-questions-ideas-feedback/

*** places to find topics
**** perl weekly challenge: 
***** https://perlweeklychallenge.org/
**** stackoverflow
**** perl6-users
**** Raku weekly
***** https://rakudoweekly.blog
**** rosettacode

**** frequently revisited doc pages
***** https://docs.raku.org/language/operators
***** https://docs.raku.org/language/pod
***** https://docs.raku.org/type/Test
***** https://docs.raku.org/language/variables
***** 



*** new topics
**** bruce gray raku for beginners, part 2
***** returns in pointy blocks return from the *surrounding* scope
****** think: for loop that searches and bails out of routine when it finds it
****** another good reason to not abuse pointy blocks, I'd say
***** widget(...) is *always* a function call
****** messes up people with perl habits:  if( $check ) { ... }
****** you're *allowed* to have a sub if { ... }
****** if you're trying to do a sub call, a space before parens can turn it to one list
doit ($onesy, $twosey);
***** raku "immutable" types are just top level immutable
****** the stuff included in a list can change internally

**** rob was trying to remember an odd gotcha case
***** guess: he was thinking about the single argument rule
****** hypothetically that could throw you:
******* a list suddenly stops being a list if there's one item
