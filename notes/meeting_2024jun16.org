* meeting notes June 2, 2024
** the raku study group
**** usual links
***** these notes
****** https://github.com/doomvox/raku-study/blob/main/notes/meeting_2024jun16.org

***** code examples
****** https://github.com/doomvox/raku-study/tree/main/bin/2024jun16

***** last meeting notes
****** https://github.com/doomvox/raku-study/blob/main/notes/meeting_2024jun02.org


** some notes from last last time 


*** type system overview

**** https://andrewshitov.com/2018/02/14/56-a-bit-more-on-rat-vs-fatrat-in-perl-6/

**** Willaim Michels: 	Current "Type System" discussion on github: 
***** https://github.com/Raku/problem-solving/issues/426

**** Bruce Gray: For further reading on our type system: 
***** https://www.reddit.com/r/ProgrammingLanguages/comments/ccbx17/gradual_typing_from_theory_to_practice_sigplan/

**** https://docs.raku.org/language/variables#$*RAT-OVERFLOW
***** INIT phasor

*** Anton Anotov, Exploratory Data Analysis with Raku 
**** https://www.youtube.com/watch?v=YCnjMVSfT8w
**** https://rakuforprediction.wordpress.com/2024/05/25/age-at-creation-for-programming-languages-stats/

*** Discussion continues: Unclear sharing of $/ causing race conditions #406
**** https://github.com/Raku/problem-solving/issues/406
**** Bill fears that in 6.3 they're going to totally break current behavior of match objects ($/)

"I feel $/ should remain a user-accessible variable that gets set
upon a match. I'm not opposed to a special switch that sets $/,
but I think it's silly to demand that the user has to write `my $/
= ...` for every gosh-darn match test."


*** Other William Michels picks:

**** https://github.com/rakudo/rakudo/issues/1966

**** https://github.com/Raku/problem-solving/issues/429

**** https://github.com/rakudo/rakudo/issues/1525

**** https://github.com/Raku/problem-solving/issues/390

**** https://github.com/Raku/problem-solving/issues/426

**** older: 
***** https://github.com/Raku/problem-solving/issues/406
***** https://github.com/Raku/problem-solving/issues/133
***** https://github.com/Raku/problem-solving/issues/378
***** https://unix.stackexchange.com/search?q=user:227738


** weekly challenge
*** the problems 
**** https://theweeklychallenge.org
*** the solutions
**** https://github.com/manwar/perlweeklychallenge-club/

*** https://theweeklychallenge.org/blog/perl-weekly-challenge-271
*** https://theweeklychallenge.org/blog/perl-weekly-challenge-272


** notes from last last time (TBD?)

*** William Michels:

**** https://github.com/Raku/problem-solving/issues/426


**** https://fluca1978.github.io/2017/09/16/Perl6Timeline.html


**** https://www.reddit.com/r/ProgrammingLanguages/comments/ccbx17/gradual_typing_from_theory_to_practice_sigplan/

*** Tim Schafer: Why Programming is Minsky"
**** https://rafal.io/static/papers/why_programming_is_minsky.pdf




*** Bruce Gray: https://metacpan.org/pod/OEIS
 


** announcements 
*** next meetings
**** Sunday June 16, 2024 (tenatative: this is father's day)
**** Sunday June 30, 2024

*** YAPC Las Vegas, June 24-28
**** lightning talks are open now:
***** https://tprc.us/tprc-2024-las/
**** the scientific track: https://science.perlcommunity.org/spj

*** Perl and Raku conference, 1-day in London
**** http://act.yapc.eu/lpw2024/

** follow-up


**** TODO feature request: complex ranges, range inclusion checks 

**** Raku featurettes to review:
***** .end


