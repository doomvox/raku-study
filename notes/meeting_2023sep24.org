* meeting notes September 24, 2023
** the raku study group
**** usual links
***** these notes
****** https://github.com/doomvox/raku-study/blob/main/notes/meeting_2023sep24.org

***** code examples
****** https://github.com/doomvox/raku-study/tree/main/bin/2023sep24

***** last meeting notes
****** https://github.com/doomvox/raku-study/blob/main/notes/meeting_2023sep10.org

** topics

*** Ranges. Rob's continuing adventures

*** william Michels
https://github.com/Tux/CSV/issues/34


*** Marton Polgar, complaints about raku module system
**** use lib not production ready, 
***** insists on loading whole location,
****** preculdes pre-compilation
**** metadata on distribution level
***** not per-module
***** can you do clean uninstalls
***** (goal is avoiding file-system unicode issues)
***** authorship of components lost/hidden
**** raku allows modules to have the same name
***** way to qualify with the author, etc
***** fear this is an easy way to hi-jack
****** no warnings, just goes with highest version 


*** TODO Next time: Bruce poses problem from rosetta code 

*** weekly challenge
**** https://theweeklychallenge.org/blog/perl-weekly-challenge-234/
**** https://theweeklychallenge.org/blog/perl-weekly-challenge-235/

** pulsar, successor to atom

** old topics from last meeting








*** Marton issues rakudo repository
**** https://github.com/rakudo/rakudo/issues/5369
**** https://github.com/rakudo/rakudo/issues/4534
**** https://github.com/rakudo/rakudo/issues/4996
**** https://github.com/rakudo/rakudo/issues/5119
***** fixed in raku ast?

**** TODO Next time: https://github.com/rakudo/rakudo/issues/2086 ?




*** doc side ToC change (https://github.com/Raku/doc-website/issues/215)
**** now live at docs-dev.raku.org
**** it deprecates the original issue - feedback wanted

*** Rakudo discussions with Bill on Github
**** Adding them (Márton) because it felt like we were running circles, in case we want to clear something up
**** https://github.com/rakudo/rakudo/issues/5239 (thunkiness of smartmatch - talked about the "happy path" last time)
**** https://github.com/rakudo/rakudo/issues/4534 (irreparable Pairs in Captures)
**** https://github.com/rakudo/rakudo/issues/5119 (resolving blocks in a list comprehension)
**** https://github.com/rakudo/rakudo/issues/5116 (comparing WhateverCode instances)
**** https://github.com/rakudo/rakudo/issues/4996 (codegenning .= for subscripts as well)

*** start promise
**** if you exepct promise code may hang, you can't time it out from the outside
**** bg case: wants to report precisely what will create a hang-up






*** TODO BUG in my setup:  my automatic save/push keeps overwriting changes pulled from github.
**** e.g. https://github.com/doomvox/raku-study/commit/193650f11613b5e2e815d02d3444e86156acee01

*** weak auto generated docs:
https://new-raku.finanalyst.org/routine/resolve

**** A thought: use data from Search box and page views to programmatically estimate importance 

** followup
*** intermittant mysterious issues with my keyboard/trackpad lash-up 
**** if you can't fix it, just replace 
*** revise my auto-push-on-save feature, should merge not over-write.
*** gather "Next time" TODOs above, enter in next meeting notes topics
*** review the following "leftovers"
*** find my old problem with $*PROGRAM and use lib
*** the MAIN subject (vs p5 getopt morass)

** leftovers from previous meeting 

*** MAIN Num and pi
**** https://www.reddit.com/r/rakulang/comments/15sk5oo/converting_arguments_to_num/
**** Marton:  Getopt::Long changes "enums" so they just work
**** Bruce: coercing to Numeric works with NaN but not pi
 raku -e 'say @*ARGS[0].Numeric'  NaN

**** my thought: design a new type that coerces the constants 

*** Anton Antonov working on org-mode execution of raku, pasting result under snippet
**** need: "zinc",  zero-mq  (message queuing)
https://zeromq.org

*** fez questions
**** tony o is the man
**** https://github.com/tony-o/raku-fez/issues


*** Bill M issue with two ranges/sequences

#+BEGIN_SRC raku

~ % raku
Welcome to Rakudo™ v2023.05.
Implementing the Raku® Programming Language v6.d.
Built on MoarVM version 2023.05.

To exit type 'exit' or '^D'
[0] > say grep({$_ == 1}, 0...5)
()
[0] > say 0...5
(0 1 2 3 4 5)
[0] > say 0...5,3...7
(0 1 2 3 4 7)
[0] > say 0...5;3...7
(0 1 2 3 4 5)
[0] > 0...5,3...7
(0 1 2 3 4 7)
[1] > (0...5,3...7)
(0 1 2 3 4 7)
[2] > (0...5,3...7,)
(0 1 2 3 4 7)
[3] > (0...5,6...7,)
(0 1 2 3 4 5 6 7)
[4] > (0..5,3..7,)
(0..5 3..7)
[5] > put (0..5,3..7,)
0 1 2 3 4 5 3 4 5 6 7
#+END_SRC

**** trying to strip down the examples

#+BEGIN_SRC raku
## seems strange:
say 0...5,3...7;
# (0 1 2 3 4 7)

## is raku parsing it like this?
say (0)...(5,3)...(7);
# (0 1 2 3 4 7)

## so let's try that in pieces:
say (0)...(5,3);
# (0 1 2 3 4 5 3)

## and...
say (5,3)...(7);
# ()

## Here there be LTA afoot.
#+END_SRC

***** peculiar cases, but why no warnings/errors?

**** range and sequence are confusable: '..' vs '...'




** announcements 
*** next meetings
**** Sunday October   8, 2023
**** Sunday October  22, 2023
**** Sunday November 19, 2023
**** Sunday December  3, 2023

*** note: the next few are on the 2 week schedule, then there's a 4 week gap 
**** anyone wants to try "hosting" one of these on Nov 5th?
