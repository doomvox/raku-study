* meeting notes December 31, 2023
** the raku study group
**** usual links
***** these notes
****** https://github.com/doomvox/raku-study/blob/main/notes/meeting_2023dec31.org

***** code examples
****** https://github.com/doomvox/raku-study/tree/main/bin/2023dec31

***** last meeting notes
****** https://github.com/doomvox/raku-study/blob/main/notes/meeting_2023dec17.org

** topics

*** david 
**** AppImage
***** like flatpak, snap
***** linux-only still

*** rob on quoting numbers
**** /home/doom/End/Cave/RakuStudy/Wall/raku-study/bin/2023dec17/rob_num_quotes.png

**** bruce points out you can get away from IntStr like so:
***** my @ints = +«<1 3 5 7 0.2>;
***** my @ints = <1 3 5 7 0.2>».Numeric;

#+BEGIN_SRC raku
sub qi (@n) { @n.map(+*) }
say .WHAT for qi <1 3 0.2>;
# (Int)
# (Int)
# (Rat)
#+END_SRC

*** toddandmargo question about regexs on p6u
**** https://www.nntp.perl.org/group/perl.perl6.users/2023/12/msg11072.html
***** mistake: missing variable on .so, hits the topic instead

*** perl weekly challenge
**** https://theweeklychallenge.org/blog/perl-weekly-challenge-247/
**** https://github.com/manwar/perlweeklychallenge-club/tree/master/challenge-247

**** https://theweeklychallenge.org/blog/perl-weekly-challenge-246/
**** https://github.com/manwar/perlweeklychallenge-club/tree/master/challenge-246
***** rob: 246 part 2: linear recurrence

**** joe: simple script in process... needs improvement
***** 
/home/doom/End/Cave/ImagePubStopGap/bin/ls2org.raku

**** bruce gray running for perl foundation board
***** only other board members vote
***** can make comments in support at pfb
****** https://news.perlfoundation.org/post/ruthboardqapp
****** https://news.perlfoundation.org/post/bruceboardapp

*** raku's srand features only semi-functional
**** can't use it to get a reproducible sequence out of .pick and friends
***** https://stackoverflow.com/questions/73994411/shouldnt-the-same-srand-value-produce-the-same-random-numbers
***** https://github.com/rakudo/rakudo/issues/5074


*** side discussion, "CAS" systems, MatLab, Maple, etc.
**** https://en.wikipedia.org/wiki/List_of_computer_algebra_systems

** old topics from previous meetings

*** issue with multiple triple dots
**** https://github.com/Raku/problem-solving/issues/407
**** See: https://github.com/doomvox/raku-study/blob/main/notes/meeting_2023sep10.org
***** local: /home/doom/End/Cave/RakuStudy/Wall/raku-study/notes/meeting_2023sep10.org

*** weeklychallenge
**** https://theweeklychallenge.org/blog/perl-weekly-challenge-245/
***** https://github.com/manwar/perlweeklychallenge-club/blob/master/challenge-245/bruce-gray/raku/ch-1.raku
***** https://github.com/manwar/perlweeklychallenge-club/blob/master/challenge-245/bruce-gray/raku/ch-2.raku

**** https://theweeklychallenge.org/blog/perl-weekly-challenge-244/
***** https://github.com/manwar/perlweeklychallenge-club/blob/master/challenge-244/bruce-gray/raku/ch-1.raku
***** https://github.com/manwar/perlweeklychallenge-club/blob/master/challenge-244/bruce-gray/raku/ch-2.raku



*** william michels: question about raku, behavior of match objects, etc
**** https://unix.stackexchange.com/a/761824/227738
**** TODO extract examples: /home/doom/End/Cave/RakuStudy/Notes/bill_matching_on_lines.sh



*** suggestions for improving raku ranges
https://gfldex.wordpress.com/2023/10/24/incomplete-ranges/

** Videos
*** google ai vids (Alan)
**** Chief Decision Scientist at Google Cloud, Cassie Kozyrkov 
***** https://www.youtube.com/watch?v=EjBXZrQ7fTs
***** https://www.youtube.com/watch?v=iLu9XyZ55oI

*** raku conference, october 28, 2023
**** https://conf.raku.org/2023/schedule
**** videos on youtube

*** joe ("erlang") armstrong, the mess we're in 
**** https://www.youtube.com/watch?v=lKXe3HUG2l4




** announcements 
*** next meetings
**** Sunday December  31, 2023
**** Sunday January   21, 2024

** followup

*** TODO BUG in my setup:  my automatic save/push keeps overwriting changes pulled from github.
**** e.g. https://github.com/doomvox/raku-study/commit/193650f11613b5e2e815d02d3444e86156acee01QQQQQq0qq`

*** look at match objects with mixed named and positionals: hashify, listify, what wins?

