* meeting notes Janurary 26, 2025 

** the raku study group
**** usual links
***** these notes
****** https://github.com/doomvox/raku-study/blob/main/notes/meeting_2025jan26.org 

***** code examples
****** https://github.com/doomvox/raku-study/tree/main/bin/2025jan26

***** last meeting notes
****** https://github.com/doomvox/raku-study/blob/main/notes/meeting_2024jan12.org

** topics
*** deepmap internals
**** bruce gray examines the hash.new.STORE issue
***** /home/doom/End/Cave/RakuStudy/Wall/raku-study/t/Deepmap/hash_new_store_uneven_lists.raku
***** Note: STORE is from Associative *conceptually*, but for odd reasons (bootstrapping) it's included in the Hash code

*** Rob: some context where using an array gives you first value, not say, count, or whole array
**** actually: case where an array just has one element, slips the element out and treats it as the one item

*** Bruce Gray on the upcoming perl & raku conference:
**** call for papers is being reopened Feb 1-Mar 1
***** inclusive, they've *got* talks

*** Bruce Gray found issue with handling of first element in produce/triangle operation
**** turned up in working the weekly challenge
***** definitly a trap-- maybe a bug
***** 
#+BEGIN_SRC raku
@numbers = 1, 2, 3;
say [\~]  @numbers;
## you get strings output, *except* for the first element, that stays a number:
##   1, '12', '123'
#+END_SRC 

***** marton argues this is a bug
****** ~ has a single argument version, so why not handle first element correctly?
#+BEGIN_SRC sh
raku -e 'say .WHAT for &infix:<~>(5)'
(Str)
#+END_SRC
****** notably: reduce doesn't show this bug, just produce does

*** weekly challenge 305
**** rob question about series of three triple dot ranges
**** bg steps through task 1, leading up to using produce/triangle bug

*** Marton: another "pair destructuring" issue was opened:
**** https://github.com/rakudo/rakudo/issues/5718
***** https://github.com/doomvox/raku-study/discussions/6
**** https://github.com/rakudo/rakudo/issues/4534

*** TODO for next meeting:
**** https://github.com/doomvox/raku-study/discussions/7

*** lizmat, finding code that isn't executed
**** https://dev.to/lizmat/finding-the-coverables-3l13

** follow-up 
*** deepmap core code
**** TODO followup: try out my proposed fix for deepmap bug

** announcements 
*** next meetings
**** Feb  9, 2025
**** Feb 23, 2025
**** Mar  9, 2025
**** Mar 23, 2025
**** Apr  6, 2025
***** after this, the two-week pattern crashes into Easter: stay tuned
