* meeting notes August 10, 2023
** the raku study group
**** usual links
***** these notes
****** https://github.com/doomvox/raku-study/blob/main/notes/meeting_2023aug20.org

***** code examples
****** https://github.com/doomvox/raku-study/tree/main/bin/2023aug20

***** last meeting notes
****** https://github.com/doomvox/raku-study/blob/main/notes/meeting_2023aug06.org

** topics 

*** MAIN Num and pi
**** https://www.reddit.com/r/rakulang/comments/15sk5oo/converting_arguments_to_num/
**** Maton:  Getopt::Long changes "enums" so they just work
**** Bruce: coercing to Numeric works with NaN but not pi
 raku -e 'say @*ARGS[0].Numeric'  NaN

**** my thought: design a new type that coerces the constants 


*** Anton Antonov working on org-mode execution of raku, pasting result under snippet
**** need: "zinc",  zero-mq  (message queuing)
https://zeromq.org

*** Bruce: a not-a-bug.  Refactoring issue.




** old topics
*** weekly challenge
**** https://theweeklychallenge.org/blog/perl-weekly-challenge-227
**** https://theweeklychallenge.org/blog/perl-weekly-challenge-228

***** TODO add links to Bruce Gray's solutions

*** rob adventures with raku's IUP module (competitor to gtk, perltk, etc.)
**** a portable graphical user interface library (from Brazil).

*** put vs say (Alan)
**** say does an implicit .gist
**** put does an implicit .Str
**** also: dd
***** say is more for casual use, it may intentionally mangle output (e.g. abbreviating lists of over 100 elems).
***** put is better at showing you things as they "really are"
****** I wonder about issues with classes that redefine behavior of .Str

*** Mart√≥n docs issue, how to talk operators
**** https://github.com/Raku/doc/discussions/4337
***** is something even an operator, e.g. {} 

*** TODO Add notes from chat to these meeting notes

** previous topics
*** pod6 as a vehicle for writing technical papers in general (Rob)
**** https://github.com/Raku/problem-solving/issues/375



** announcements 
*** next meeting: in 3 weeks, skipping labor day

