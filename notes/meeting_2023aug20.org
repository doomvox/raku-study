* meeting notes August 10, 2023
** the raku study group
**** usual links
***** these notes
****** https://github.com/doomvox/raku-study/blob/main/notes/meeting_2023aug20.org

***** code examples
****** https://github.com/doomvox/raku-study/tree/main/bin/2023aug20

***** last meeting notes
****** https://github.com/doomvox/raku-study/blob/main/notes/meeting_2023aug06.org

** topics 

*** MAIN Num and pi
**** https://www.reddit.com/r/rakulang/comments/15sk5oo/converting_arguments_to_num/
**** Maton:  Getopt::Long changes "enums" so they just work
**** Bruce: coercing to Numeric works with NaN but not pi
 raku -e 'say @*ARGS[0].Numeric'  NaN

**** my thought: design a new type that coerces the constants 


*** Anton Antonov working on org-mode execution of raku, pasting result under snippet
**** need: "zinc",  zero-mq  (message queuing)
https://zeromq.org

*** Bruce Gray brings up a not-a-bug:
#+BEGIN_SRC raku
.map(*.blah);
.map(&blah);
#+END_SRC

**** The & form works only if the routine takes just one argument.

*** start promise
**** if you exepct promise code may hang, you can't time it out from the outside
**** bg case: wants to report precisely what will create a hang-up

*** fez questions
**** tony o
**** https://github.com/tony-o/raku-fez/issues

*** weekly challenge
**** https://theweeklychallenge.org/blog/perl-weekly-challenge-229
**** https://theweeklychallenge.org/blog/perl-weekly-challenge-230


*** Bill M issue with two ranges/sequences

#+BEGIN_SRC raku

~ % raku
Welcome to Rakudo™ v2023.05.
Implementing the Raku® Programming Language v6.d.
Built on MoarVM version 2023.05.

To exit type 'exit' or '^D'
[0] > say grep({$_ == 1}, 0...5)
()
[0] > say 0...5
(0 1 2 3 4 5)
[0] > say 0...5,3...7
(0 1 2 3 4 7)
[0] > say 0...5;3...7
(0 1 2 3 4 5)
[0] > 0...5,3...7
(0 1 2 3 4 7)
[1] > (0...5,3...7)
(0 1 2 3 4 7)
[2] > (0...5,3...7,)
(0 1 2 3 4 7)
[3] > (0...5,6...7,)
(0 1 2 3 4 5 6 7)
[4] > (0..5,3..7,)
(0..5 3..7)
[5] > put (0..5,3..7,)
0 1 2 3 4 5 3 4 5 6 7
#+END_SRC

**** trying to strip down the examples

#+BEGIN_SRC raku

say 0...5,3...7;
# (0 1 2 3 4 7)

say (0)...(5,3)...(7);
# (0 1 2 3 4 7)

say (0)...(5,3);
# (0 1 2 3 4 5 3)

say (5,3)...(7);
# ()

#+END_SRC

**** range and sequence are confusable: '..' vs '...'


** previous topics
*** pod6 as a vehicle for writing technical papers in general (Rob)
**** https://github.com/Raku/problem-solving/issues/375

** announcements 
*** next meeting: in 3 weeks, skipping labor day
**** Sunday Sep 10, 2023

